sh -c '
<%= "export https_proxy=\"#{knife_config[:bootstrap_proxy]}\"" if knife_config[:bootstrap_proxy] -%>

# Add Stretch repository to apt for Ruby 2.3 packages
echo "deb http://archive.raspbian.org/raspbian/ stretch main" > /etc/apt/sources.list.d/stretch.list

# Update the Apt index
apt-get update

# Remove any existing Ruby versions
apt-get purge ruby -y

# Install new packages
DEBIAN_FRONTEND=noninteractive apt-get install -y curl ruby ruby-dev ruby2.3 ruby2.3-dev autoconf bison build-essential libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libncurses5-dev libffi-dev libgdbm3 libgdbm-dev

# As we are using Stretch for the Ruby 2.3 packages not all dependencies can be correctly installed, force them
apt-get -f install

gem install moneta --no-rdoc --no-ri --verbose
gem install net-ssh-gateway --no-rdoc --no-ri --verbose
gem install net-ssh --no-rdoc --no-ri --verbose
gem install ohai --no-rdoc --no-ri --verbose
gem install chef --no-rdoc --no-ri --verbose
# Add Chef configurations
mkdir -p /etc/chef
sudo curl https://raw.githubusercontent.com/edrapac/chef_pihole/master/chef-client -o /usr/local/bin/chef-client
sudo chmod +x /usr/local/bin/chef-client
<% if client_pem -%>
    cat > /etc/chef/client.pem <<EOP
<%= ::File.read(::File.expand_path(client_pem)) %>
EOP
chmod 0600 /etc/chef/client.pem
<% end -%>

<% if validation_key -%>
    cat > /etc/chef/validation.pem <<EOP
<%= validation_key %>
EOP
chmod 0600 /etc/chef/validation.pem
<% end -%>

<% if encrypted_data_bag_secret -%>
    cat > /etc/chef/encrypted_data_bag_secret <<EOP
<%= encrypted_data_bag_secret %>
EOP
chmod 0600 /etc/chef/encrypted_data_bag_secret
<% end -%>

<% unless trusted_certs.empty? -%>
    mkdir -p /etc/chef/trusted_certs
    <%= trusted_certs %>
<% end -%>

<%# Generate Ohai Hints -%>
<% unless @chef_config[:knife][:hints].nil? || @chef_config[:knife][:hints].empty? -%>
    mkdir -p /etc/chef/ohai/hints

    <% @chef_config[:knife][:hints].each do |name, hash| -%>
        cat > /etc/chef/ohai/hints/<%= name %>.json <<EOP
<%= Chef::JSONCompat.to_json(hash) %>
EOP
    <% end -%>
<% end -%>

cat > /etc/chef/client.rb <<EOP
<%= config_content %>
EOP

cat > /etc/chef/first-boot.json <<EOP
<%= Chef::JSONCompat.to_json(first_boot) %>
EOP

<% unless client_d.empty? -%>
mkdir -p /etc/chef/client.d
<%= client_d %>
<% end -%>

echo "Starting the first Chef Client run..."

<%= start_chef %>'
